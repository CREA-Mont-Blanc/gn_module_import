import { Step } from "./enums.model";


export interface ImportErrorType {
    pk: number;
    category: string;
    name: string;
    description: string;
    level: string;
}

export interface ImportError {
    pk: number;
    id_import: number;
    id_type: number;
    type: ImportErrorType;
    column: string;
    rows: Array<number>;
    step: number;
    comment: string;
}

export interface Import {
	id_import: number;
    format_source_file: string;
    srid: number;
    separator: string;
    encoding: string;
    detected_encoding: string;
    import_table: string;
    full_file_name: string;
    id_dataset: number;
    id_field_mapping: number;
    id_content_mapping: number;
    date_create_import: string;
    date_update_import: string;
    source_count: number;
    import_count: number;
    taxa_count: number;
    date_min_data: string;
    date_max_data: string;
    step: Step;
    uuid_autogenerated: boolean;
    is_finished: boolean;
    processing: boolean;
    in_error: boolean;

    authors_name: string;
    available_encodings?: [string];
    available_formats?: [string];
    detected_format?: string;

    errors?: [ImportError];
    dataset?: any; // TODO Dataset
}

export interface NomenclatureType {
    id_type: number;
    mnemonique: string;
    label_default: string;
    definition_default: string;

    isCollapsed?: boolean;
}

export interface Nomenclature {
    cd_nomenclature: string;
    mnemonique: string;
    label_default: string;
    definition_default: string;
    source: string;
    statut: string;
    id_broader: number;
    hierarchy: string;
    active: boolean;
    meta_create_date: string;
    meta_update_date: string;
}

export interface ImportValues {
    [target_field: string]: {
        nomenclature_type: NomenclatureType,
        nomenclatures: [Nomenclature],
        values: [string];
    }
}

interface SynthesisTheme {
    id_theme: number,
    name_theme: string,
    fr_label_theme: string,
    eng_label_theme: string,
    desc_theme: string,
    order_theme: number,
}

interface SynthesisField {
    id_field: number,
    name_field: string,
    fr_label: string,
    eng_label: string,
    desc_field: string,
    type_field: string,
    synthese_field: boolean,
    mandatory: boolean,
    autogenerated: boolean,
    nomenclature: boolean,
    mnemonique: string,
    id_theme: number,
    order_field: number,
    comment: string,
    display: boolean,
}

export interface SynthesisThemeFields {
    theme: SynthesisTheme,
    fields: [SynthesisField],
}
